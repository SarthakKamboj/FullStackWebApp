{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Sarthak\\\\TypeScipt-GraphQL-Postgres-React-Tut\\\\front-end\\\\pages\\\\register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation } from \"urql\";\nvar REGISTER_MUT = \"\\n    mutation Register($username: String!, $password: String!) {\\n        register(options:{username:$username,password:$password}) {\\n            errors {\\n                field\\n                message\\n            }\\n            user {\\n                id\\n                username\\n            }\\n        }\\n    }\\n\";\n\nvar Register = function Register() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useMutation = useMutation(REGISTER_MUT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerUser = _useMutation2[1];\n\n  var onSubmit = handleSubmit(function (data) {\n    console.log(data);\n    registerUser(data);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Register Page\", __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    name: \"username\",\n    placeholder: \"Username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    ref: register({\n      required: \"Password required\",\n      minLength: {\n        value: 8,\n        message: \"Password is too short\"\n      }\n    }),\n    name: \"password\",\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Submit \"), errors.password && errors.password.message));\n};\n\n_s(Register, \"MJ6SnRlCb6WYA4XIfqMWI9H018s=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Sarthak/TypeScipt-GraphQL-Postgres-React-Tut/front-end/pages/register.tsx"],"names":["React","useForm","useMutation","REGISTER_MUT","Register","register","handleSubmit","errors","registerUser","onSubmit","data","console","log","required","minLength","value","message","password"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAOA,IAAMC,YAAY,qUAAlB;;AAeA,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,GAAM;AAAA;;AAAA,iBAEYH,OAAO,EAFnB;AAAA,MAEtBI,QAFsB,YAEtBA,QAFsB;AAAA,MAEZC,YAFY,YAEZA,YAFY;AAAA,MAEEC,MAFF,YAEEA,MAFF;;AAAA,qBAILL,WAAW,CAACC,YAAD,CAJN;AAAA;AAAA,MAIrBK,YAJqB;;AAM7B,MAAMC,QAAQ,GAAGH,YAAY,CAAC,UAACI,IAAD,EAAU;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,IAAAA,YAAY,CAACE,IAAD,CAAZ;AACF,GAH4B,CAA7B;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAACQ,MAAAA,QAAQ,EAAC;AAAV,KAAD,CAAhC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,WAAW,EAAC,UAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAER,QAAQ,CAAC;AAACQ,MAAAA,QAAQ,EAAC,mBAAV;AAA+BC,MAAAA,SAAS,EAAC;AAACC,QAAAA,KAAK,EAAC,CAAP;AAAUC,QAAAA,OAAO,EAAC;AAAlB;AAAzC,KAAD,CAApC;AAA4H,IAAA,IAAI,EAAC,UAAjI;AAA4I,IAAA,WAAW,EAAC,UAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAIKT,MAAM,CAACU,QAAP,IAAmBV,MAAM,CAACU,QAAP,CAAgBD,OAJxC,CAFJ,CADJ;AAWH,CAtBD;;GAAMZ,Q;UAEuCH,O,EAEjBC,W;;;KAJtBE,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import * as React from \"react\"\r\nimport {useForm} from \"react-hook-form\";\r\nimport { useMutation } from \"urql\";\r\n\r\ntype formType = {\r\n    username: string\r\n    password: string\r\n}\r\n\r\nconst REGISTER_MUT = `\r\n    mutation Register($username: String!, $password: String!) {\r\n        register(options:{username:$username,password:$password}) {\r\n            errors {\r\n                field\r\n                message\r\n            }\r\n            user {\r\n                id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Register: React.FC = () => {\r\n    \r\n    const {register, handleSubmit, errors} = useForm<formType>();\r\n\r\n    const [,registerUser] = useMutation(REGISTER_MUT);\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n       console.log(data);\r\n       registerUser(data);\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            Register Page\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" ref={register({required:true})} name=\"username\" placeholder=\"Username\" />\r\n                <input type=\"password\" ref={register({required:\"Password required\", minLength:{value:8, message:\"Password is too short\"}})} name=\"password\" placeholder=\"Password\" />\r\n                <button type='submit'>Submit </button>\r\n                {errors.password && errors.password.message}\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}